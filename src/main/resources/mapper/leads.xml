<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vkc.leads">
    <resultMap id="leads" type="com.example.entity.Leads">
        <result property="uid" column="uid" />
        <result property="name" column="name" />
        <result property="source" column="source" />
        <result property="partner" column="partner" />
        <result property="manager" column="manager" />
        <result property="company" column="company" />
        <result property="industry" column="industry" />
        <result property="location" column="location" />
        <result property="summary" column="summary" />
        <result property="description" column="description" />
        <result property="status" column="status" />
        <result property="lastChange" column="last_change" />
        <result property="next" column="next" />
        <result property="sourceReason" column="source_reason" />
        <result property="passReason" column="pass_reason" />
        <result property="meetingRecord" column="meeting_record" />
        <result property="bpRecord" column="bp_record" />
    </resultMap>

    <insert id="insert" parameterType="com.example.entity.Leads">
      insert into `vkc`.`leads`
      (`name`, source, partner, manager, company, industry, `location`, summary, description, `status`, last_change,
      `next`, `source_reason`, `pass_reason`, `meeting_record`, `bp_record`)
      values
      (#{name}, #{source}, #{partner}, #{manager}, #{company}, #{industry}, #{location}, #{summary}, #{description},
      #{status}, #{lastChange}, #{next}, #{sourceReason}, #{passReason}, #{meetingRecord}, #{bpRecord})
    </insert>

    <update id="update" parameterType="com.example.entity.Leads">
        update `vkc`.`leads`
        set
        <if test="name != null">
            `name` = #{name},
        </if>
        source = #{source},
        partner = #{partner},
        manager = #{manager},
        <if test="company != null">
            company = #{company},
        </if>
        industry = #{industry},
        `location` = #{location},
        summary = #{summary},
        description = #{description},
        `status` = #{status},
        last_change = #{lastChange},
        `next` = #{next},
        `source_reason` = #{sourceReason},
        `pass_reason` = #{passReason},
        where uid = #{uid}
    </update>

    <select id="select" resultMap="leads" parameterType="java.util.Map">
        select *
        from
        `vkc`.`leads`
        where block_flag = 0
        <if test="name != null">
            and `name` = #{name}
        </if>
        <if test="source != null">
            and `source` = #{source}
        </if>
        <if test="partner != null">
            and `partner` = #{partner}
        </if>
        <if test="manager != null">
            and `manager` = #{manager}
        </if>
        <if test="company != null">
            and `company` = #{company}
        </if>
        <if test="industry != null">
            and `industry` = #{industry}
        </if>
        <if test="location != null">
            and `location` = #{location}
        </if>
        <if test="status != null">
            and `status` = #{status}
        </if>
        <if test="lastChange != null">
            and `last_change` = #{lastChange}
        </if>
        <if test="next != null">
            and `next` = #{next}
        </if>
        <if test="statusLessAndEqual != null">
            <![CDATA[
              and `status` <= #{statusLessThan}
            ]]>
        </if>
        <if test="statusBiggerThan != null">
            <![CDATA[
              and `status` > #{statusBiggerThan}
            ]]>
        </if>
        order by last_change
    </select>

    <select id="selectByUid" resultMap="leads">
        select *
        from
        `vkc`.`leads`
        where block_flag = 0 and uid = #{uid}
    </select>

    <update id="delete" parameterType="java.lang.Integer">
        update `vkc`.`leads` set
        block_flag = 1
        where uid = #{uid}
    </update>

</mapper>